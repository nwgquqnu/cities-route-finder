version: "3.2"
services:
  h2-server:
    build:
      context: ./docker/h2
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./docker/h2/h2-data
        target: /opt/h2-data
    ports:
      - 8091:8091
      - 1521:1521
    networks:
      - backend
  cloud-config:
    build:
      context: .
      dockerfile: ./docker/generic/Dockerfile
      args:
        JAR_FILE: ./cloud-config/target/cloud-config-0.0.1-SNAPSHOT.jar
    environment:
      EUREKA_HOST: service-registry
    networks:
      - backend
  service-registry:
    build:
      context: .
      dockerfile: ./docker/generic/Dockerfile
      args:
        JAR_FILE: ./service-registry/target/service-registry-0.0.1-SNAPSHOT.jar
    environment:
      EUREKA_HOST: service-registry
      CLOUD_CONFIG_HOST: cloud-config
    depends_on:
      - cloud-config
    networks:
      - backend
  cities-storage:
    build:
      context: .
      dockerfile: ./docker/generic/Dockerfile
      args:
        JAR_FILE: ./cities-storage/target/cities-storage-0.0.1-SNAPSHOT.jar
    environment:
      DB_SERVER_HOST: h2-server
      EUREKA_HOST: service-registry
    depends_on:
      - service-registry
      - h2-server
    ports:
      - 8083:8083
    networks:
      - backend
  route-finder:
    build:
      context: .
      dockerfile: ./docker/generic/Dockerfile
      args:
        JAR_FILE: ./route-finder/target/route-finder-0.0.1-SNAPSHOT.jar
    environment:
      EUREKA_HOST: service-registry
    depends_on:
      - service-registry
    networks:
      - backend
  api-gateway:
    build:
      context: .
      dockerfile: ./docker/generic/Dockerfile
      args:
        JAR_FILE: ./api-gateway/target/api-gateway-0.0.1-SNAPSHOT.jar
    environment:
      EUREKA_HOST: service-registry
    depends_on:
      - service-registry
    ports:
      - 8080:8080
    networks:
      - backend
networks:
  backend:
